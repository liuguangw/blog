name: Development

on:
  push:
    branches: [ master ]
  # 手动触发
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn directory path
        run: |
         echo "YARN_PKG_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV
         echo "YARN_GBIN_DIR=$(yarn global bin)" >> $GITHUB_ENV

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.YARN_PKG_CACHE_DIR }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: |
         yarn build
         echo "::group::./ files"
         ls -al
         echo "::endgroup::"
         echo "::group::./public files"
         ls -al ./public
         echo "::endgroup::"

      - name: Install CloudBase CLI
        if: ${{ !hashFiles(format('{0}/tcb',env.YARN_GBIN_DIR)) }}
        run: yarn global add @cloudbase/cli

      # 同步文件
      - name: Deploy static to Tencent CloudBase
        run: |
          tcb login --apiKeyId ${{ secrets.SECRET_ID }} --apiKey ${{ secrets.SECRET_KEY }}
          tcb hosting detail -e ${{ secrets.ENV_ID }}
          tcb hosting deploy ./public / -r gz -e ${{ secrets.ENV_ID }}
